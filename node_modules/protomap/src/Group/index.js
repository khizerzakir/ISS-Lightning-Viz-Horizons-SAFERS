export class Group {
  constructor(Container, dict) {
    this.cons = Container;
    this.dict = dict;
  }

  map(func) {
    const defaultFunc = ([k, v]) => [k, v];
    return new Group(this.cons, Object.fromEntries(Object.entries(this.dict).map(func ?? defaultFunc)));
  }

  grap(func) {
    const Cons = this.cons;
    const defaultFunc = ([, v]) => v;
    return new Cons(...Object.entries(this.dict).map(func ?? defaultFunc));
  }

  keys() {
    const Cons = this.cons;
    return new Cons(...Object.keys(this.dict));
  }

  get(key) {
    return this.dict[key];
  }
}