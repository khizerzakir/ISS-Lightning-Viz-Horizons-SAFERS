import { Accrual } from '../Accrual';
import {List} from '../List';

import {alternateDeduct} from './alternate-deduct';

export const decompose = (origEntries) => {
  const copy = origEntries.map(entry => entry.copy());
  const decomp = new List();

  for (let i = 0; i < copy.length; i++) {
    copy[i].accrual.swap();
  }

  let acc = new Accrual();
  for (let start = 0, end = 0; end < copy.length; end++){

    acc.add(copy[end].accrual);

    if (Math.abs(acc.diff()) < 1e-4){
      let groupEntries = copy.slice(start, end+1);
      const drRecs = groupEntries.filter(({accrual}) => accrual.dir() === 'dr');
      const crRecs = groupEntries.filter(({accrual}) => accrual.dir() === 'cr');

      const records = alternateDeduct({list: drRecs, col: 'dr'}, {list: crRecs, col: 'cr'}).flat();
      decomp.push(...records);

      start = end + 1;
    }
  }

  for (let i = 0; i < decomp.length; i++) {
    decomp[i].accrual.unswap();
    decomp[i].succ = origEntries;
  }

  return decomp;
}
